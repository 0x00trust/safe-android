apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "pm.gnosis.android.app.wallet"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    defaultConfig {
        buildConfigField "String", "BLOCKCHAIN_NET_URL", '"https://mainnet.infura.io"'
        buildConfigField "String", "INFURA_API_KEY", getKey("INFURA_API_KEY")
        buildConfigField "boolean", "PRIVATE_TEST_NET", "false"
    }

    buildTypes {
        chainTest {
            signingConfig signingConfigs.debug
            minifyEnabled false
            buildConfigField "String", "BLOCKCHAIN_NET_URL", getKey("BLOCKCHAIN_NET_URL")
            buildConfigField "boolean", "PRIVATE_TEST_NET", getKey("PRIVATE_TEST_NET", "false")
        }

        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }
}

static def getKey(String property, String defaultValue = "") {
    Properties properties = new Properties()
    properties.load(new FileInputStream("project_keys"))
    String value = properties.getProperty(property)
    return value != null ? value : defaultValue
}


dependencies {
    final SUPPORT_LIB_VERSION = '26.0.1'
    final DAGGER_VERSION = '2.11'
    final RETROFIT_VERSION = '2.3.0'
    final ARCHITECTURE_COMPONENTS_VERSION = '1.0.0-alpha9'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:cardview-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIB_VERSION"

    implementation "android.arch.persistence.room:runtime:$ARCHITECTURE_COMPONENTS_VERSION"
    kapt "android.arch.persistence.room:compiler:$ARCHITECTURE_COMPONENTS_VERSION"
    implementation "android.arch.persistence.room:rxjava2:$ARCHITECTURE_COMPONENTS_VERSION"

    implementation "com.jakewharton.timber:timber:4.5.1"
    //https://github.com/square/moshi/issues/315
    implementation "com.squareup.moshi:moshi:1.4.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation "io.reactivex.rxjava2:rxjava:2.1.2"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-moshi:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation "com.gojuno.koptional:koptional:1.2.0"

    implementation "com.google.zxing:core:3.3.0"
    implementation "com.github.clans:fab:1.6.4"
    implementation "me.zhanghai.android.materialprogressbar:library:1.4.1"

    //Dagger
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    //Ethereum
    implementation "org.ethereum:geth:1.6.6"

    testImplementation 'junit:junit:4.12'
}
